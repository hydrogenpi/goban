#version 300 es
precision lowp float;
layout(location=0) in vec4 vertex;
out vec3 rdb;
flat out vec3 roo;
out vec4 odd;
uniform vec2 iResolution;
uniform float iTime;
uniform mat4 glModelViewMatrix;
uniform vec3 iTranslate;
void main ()
{
  gl_Position = vertex;
  float tmpvar_1;
  tmpvar_1 = (0.1 * iTime);
  float tmpvar_2;
  tmpvar_2 = sin(tmpvar_1);
  vec4 tmpvar_3;
  tmpvar_3.yw = vec2(0.0, 0.0);
  tmpvar_3.x = cos(tmpvar_1);
  tmpvar_3.z = tmpvar_2;
  mat4 tmpvar_4;
  tmpvar_4[uint(0)].x = tmpvar_3.x;
  tmpvar_4[uint(0)].y = 0.0;
  tmpvar_4[uint(0)].z = tmpvar_3.z;
  tmpvar_4[uint(0)].w = 0.0;
  tmpvar_4[1u].x = 0.0;
  tmpvar_4[1u].y = 1.0;
  tmpvar_4[1u].z = 0.0;
  tmpvar_4[1u].w = 0.0;
  tmpvar_4[2u].x = -(tmpvar_2);
  tmpvar_4[2u].y = 0.0;
  tmpvar_4[2u].z = tmpvar_3.x;
  tmpvar_4[2u].w = 0.0;
  tmpvar_4[3u].x = 0.0;
  tmpvar_4[3u].y = 0.0;
  tmpvar_4[3u].z = 0.0;
  tmpvar_4[3u].w = 1.0;
  mat4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * glModelViewMatrix);
  vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = iTranslate;
  vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * tmpvar_6).xyz;
  roo = ((tmpvar_5 * vec4(0.0, 0.0, -3.0, 1.0)).xyz + tmpvar_7);
  vec3 tmpvar_8;
  tmpvar_8 = normalize((tmpvar_5 * vec4(0.0, 1.0, 0.0, 1.0)).xyz);
  vec3 tmpvar_9;
  tmpvar_9 = normalize((tmpvar_7 - roo));
  vec3 tmpvar_10;
  tmpvar_10 = normalize(((tmpvar_8.yzx * tmpvar_9.zxy) - (tmpvar_8.zxy * tmpvar_9.yzx)));
  vec2 tmpvar_11;
  tmpvar_11.y = 1.0;
  tmpvar_11.x = (iResolution.x / iResolution.y);
  vec2 tmpvar_12;
  tmpvar_12 = (vertex.xy * tmpvar_11);
  odd = (0.5 * (1.0 + vertex));
  rdb = (((tmpvar_12.x * tmpvar_10) + (tmpvar_12.y * 
    ((tmpvar_9.yzx * tmpvar_10.zxy) - (tmpvar_9.zxy * tmpvar_10.yzx))
  )) + (3.0 * tmpvar_9));
}

